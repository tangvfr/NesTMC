/**
 * 
 */
package fr.tangv.nestmc.nes.software;

import fr.tangv.nestmc.draw.Drawable;
import fr.tangv.nestmc.nes.TMCNes;
import fr.tangv.nestmc.nes.controller.InputController;
import fr.tangv.nestmc.palette.v1_8.MapColorV1_8;

/**
 * @author Tangv - https://tangv.fr
 * Syt√®me d'exploitation des nes pour permet au joueur d'intergir avec la console
 */
public class TMCNesOs extends NesOs {

	private byte[] img = new byte[] {(byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x24, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x24, (byte) 0x55, (byte) 0x55, (byte) 0x55, (byte) 0x55, (byte) 0x55, (byte) 0x55, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x24, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x24, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x24, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x24, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x24, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x21, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x24, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x0e, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x00, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x10, (byte) 0x27, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x27, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x00, (byte) 0x00, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x27, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x27, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x24, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x76, (byte) 0x27, (byte) 0x27, (byte) 0x27, (byte) 0x00, (byte) 0x00};	
	private int x = (int) (Math.random() * 200);
	private int y = (int) (Math.random() * 200);
	private int dx = 1;
	private int dy = 1;
	private int border = 256 - 38 - 1;
	
	@Override
	public void update(TMCNes nes, InputController firstIn, InputController secondIn, InputController mixedIn) {
		//x
		x += dx;
		if (x <= 0 || x >= border) {
			dx *= -1;
		}
		y += dy;
		if (y <= 0 || y >= border) {
			dy *= -1;
		}
	}

	@Override
	public void render(TMCNes nes, Drawable draw) {
		draw.clearScreen(MapColorV1_8.TRANSPARENT_SHADOW);
		draw.drawBuffer(this.x, this.y, this.img, 38, 14);
		this.setSend(true);
	}

}
